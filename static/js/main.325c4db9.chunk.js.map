{"version":3,"sources":["components/Navigation/Drawer/Drawer.module.css","components/FinishQuiz/FinishQuiz.module.css","components/Navigation/MenuToggle/MenuToggle.module.css","containers/Quiz/Quiz.module.css","components/ActiveQuiz/ActiveQuiz.module.css","components/AnswersList/AnswerItem/AnswerItem.module.css","components/UI/Button/Button.module.css","components/UI/Loader/Loader.module.css","components/UI/Input/Input.module.css","containers/Auth/Auth.module.css","hoc/Layout/Layout.module.css","components/UI/Backdrop/Backdrop.module.css","components/AnswersList/AnswersList.module.css","containers/QuizList/QuizList.module.css","containers/QuizCreator/QuizCreator.module.css","components/UI/Select/Select.module.css","components/Navigation/MenuToggle/MenuToggle.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Drawer/Drawer.js","hoc/Layout/Layout.js","components/AnswersList/AnswerItem/AnswerItem.js","components/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/UI/Button/Button.js","components/FinishQuiz/FinishQuiz.js","components/UI/Loader/Loader.js","axios/axiosQuiz.js","store/actions/actionTypes.js","store/actions/quiz.js","containers/Quiz/Quiz.js","containers/QuizList/QuizList.js","components/Form/formFramework.js","components/UI/Input/Input.js","components/UI/Select/Select.js","store/reduser/create.js","containers/QuizCreator/QuizCreator.js","store/actions/create.js","store/actions/auth.js","containers/Auth/Auth.js","store/reduser/auth.js","components/Logout/Logout.js","App.js","reportWebVitals.js","store/reduser/quiz.js","store/reduser/rootReduser.js","index.js"],"names":["module","exports","MenuToogle","props","cls","classes","MenuTooggle","isOpen","open","className","join","onClick","onToggle","Backdrop","Drawer","links","map","link","index","to","exact","activeClassName","active","onClickHandler","label","this","close","isAut","renderLinks","Component","Layout","state","menu","toogleMenuHandlerr","setState","children","connect","authReduser","token","AnswerItem","onAnswerClick","Number","answer","id","text","AnswersList","answers","ActiveQuiz","Question","answerNumber","question","quizLenght","Button","type","disabled","FinishQuiz","console","log","results","successCount","Object","keys","reduce","total","key","quiz","quizItem","error","success","questuon","length","onRetry","Loader","center","axios","create","baseURL","FETCH_QUIZES_START","FETCH_QUIZES_SUCCES","FETCH_QUIZES_ERROR","FETCH_QUIZ_SUCCES","QUIZE_SET_STATE","FINISH_QUIZ","QUIZ_NEXT_QUESTION","RETRY_QUIZ","CREATE_QUIZ_QUESTION","RESET_QUIZ_CREATION","AUTH_SUCCESS","AUTH_LOGOUT","fetchQuizesStart","fetchQuizesSucces","quizes","fetchQuizesError","e","fetchQuizSuccess","quizSetState","answerState","quizAnswerClick","answerId","dispatch","getState","quizReducer","activeQuestion","rightAnswerId","timeout","window","setTimeout","number","clearTimeout","Quiz","fetchQuizById","match","params","retryQuiz","QuizWrapper","loading","isFinish","quizeId","a","get","response","data","QuizList","name","fetchQuizes","renderQuizes","forEach","itemName","creacteControl","config","validation","valid","touched","value","validateFramework","isValid","required","trim","validateFormFramework","formControls","isFormValid","control","hasOwnProperty","isInvalid","shouldValidate","Input","inputType","htmlFor","Math","random","invalid","onChange","errorMessage","Select","options","option","initialState","createReduser","action","item","createOptionControl","createFormControls","option1","option2","option3","option4","QuizCreator","submitHandler","event","preventDefault","addQuestionHandler","questionItem","createQuizeQuestion","createQuizHandler","finishCreateQuiz","then","history","push","onChangeHandler","controlName","selectChangeHandler","target","Fragment","select","onSubmit","renderControls","post","autoLogout","time","dispath","logout","localStorage","removeItem","authSuccess","Auth","email","password","minLenght","loginHandler","auth","registerHandler","validateControl","isValue","is","controlname","AuthForm","renderInputs","isLogin","authData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","idToken","localId","Logout","App","autoLogin","routes","path","component","withRouter","getItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReduser","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.325c4db9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer_Drawer__3SVfj\",\"close\":\"Drawer_close__11_gu\",\"active\":\"Drawer_active__OE3hE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishQuiz\":\"FinishQuiz_FinishQuiz__3LHZu\",\"success\":\"FinishQuiz_success__3BSrv\",\"error\":\"FinishQuiz_error__PXebx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuTooggle\":\"MenuToggle_MenuTooggle__2Tm56\",\"open\":\"MenuToggle_open__otP2c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__1_zoW\",\"QuizWrapper\":\"Quiz_QuizWrapper__2NdGN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz_ActiveQuiz__Trg1g\",\"Question\":\"ActiveQuiz_Question__3dsSZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__2e29j\",\"success\":\"AnswerItem_success__1_DqW\",\"error\":\"AnswerItem_error__2zdeb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2MgK3\",\"success\":\"Button_success__1Z7w7\",\"error\":\"Button_error__3Om4B\",\"primary\":\"Button_primary__3hpJM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__34qod\",\"lds-ripple\":\"Loader_lds-ripple__3SCD1\",\"center\":\"Loader_center__1kqr4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__12RMz\",\"invalid\":\"Input_invalid__1l3Ge\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__1Z_0W\",\"AuthForm\":\"Auth_AuthForm__3KLbZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__3acRj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__2SenO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList_AnswersList__2RjgF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"QuizList_QuizList__2ldy4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizCreator\":\"QuizCreator_QuizCreator__3OeZd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select_Select__3tgQW\"};","import React, {Component} from 'react'\r\nimport classes from './MenuToggle.module.css'\r\n\r\n\r\nconst MenuToogle = props => {\r\n    let cls = [\r\n        classes.MenuTooggle,\r\n        'fa'\r\n    ]\r\n\r\n    if (props.isOpen) {\r\n        cls = [ ...cls, 'fa-times']\r\n        cls = [ ...cls, classes.open]\r\n    } else {\r\n        cls = [ ...cls, 'fa-bars']\r\n    }\r\n\r\n    return (\r\n        <i\r\n            className={ cls.join(' ')}\r\n            onClick={ props.onToggle }\r\n        />\r\n    )\r\n}\r\n\r\nexport default MenuToogle","import React, {Component} from 'react'\r\nimport classes from './Backdrop.module.css'\r\n\r\n\r\nconst Backdrop = props => {\r\n    return (\r\n        <div className={classes.Backdrop} onClick={ props.onClick }></div>\r\n    )\r\n}\r\n\r\nexport default Backdrop\r\n","import React, {Component} from 'react'\r\nimport classes from './Drawer.module.css'\r\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nclass Drawer extends Component {\r\n\r\n\r\n    renderLinks(links) {\r\n        return links.map( (link, index) => {\r\n            return (\r\n                <li key={index}>\r\n                    <NavLink\r\n                        to={link.to}\r\n                        exact={link.exact}\r\n                        activeClassName={classes.active}\r\n                        onClick={ this.props.onClickHandler }\r\n                    >\r\n                        {link.label}\r\n                    </NavLink>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        let cls = [classes.Drawer]\r\n\r\n        if(!this.props.isOpen) {\r\n            cls = [ ...cls, classes.close]\r\n        }\r\n\r\n        let links = [\r\n            {to: '/', label: 'Список', exact: true},\r\n        ]\r\n\r\n        if(this.props.isAut) {\r\n            links = [ ...links, {to: '/quiz-creator', label: 'Создать тест', exact: true}]\r\n            links = [ ...links, {to: '/logout', label: 'Выйти', exact: true}]\r\n        } else {\r\n            links = [ ...links, {to: '/auth', label: 'Авторизация', exact: true}]\r\n        }\r\n\r\n\r\n        return (\r\n\r\n            <>\r\n\r\n                <nav className={cls.join(\" \")}>\r\n                    <ul>\r\n                        { this.renderLinks(links) }\r\n                    </ul>\r\n                </nav>\r\n\r\n                {\r\n                    this.props.isOpen ? <Backdrop onClick={ this.props.onClickHandler }/> : null\r\n                }\r\n\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Drawer","import React, {Component} from 'react'\r\nimport classes from './Layout.module.css'\r\nimport MenuToogle from \"../../components/Navigation/MenuToggle/MenuToggle\";\r\nimport Drawer from \"../../components/Navigation/Drawer/Drawer\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass Layout extends Component {\r\n\r\n    state = {\r\n        menu: false\r\n    }\r\n\r\n    toogleMenuHandlerr = () => {\r\n        this.setState({\r\n            menu: !this.state.menu\r\n        })\r\n    }\r\n\r\n    onClickHandler = () => {\r\n        this.setState({\r\n            menu: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className={classes.Layout}>\r\n\r\n                <Drawer\r\n                    isOpen={this.state.menu}\r\n                    onClickHandler={this.onClickHandler}\r\n                    isAut={this.props.isAut}\r\n                />\r\n\r\n                <MenuToogle\r\n                    onToggle={this.toogleMenuHandlerr}\r\n                    isOpen={this.state.menu}\r\n                />\r\n\r\n                <main>\r\n                    { this.props.children }\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAut: !!state.authReduser.token\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Layout);","import React from 'react'\r\nimport classes from './AnswerItem.module.css'\r\n\r\nconst AnswerItem = props => {\r\n\r\n    let cls = [classes.AnswerItem]\r\n\r\n    if(props.state){\r\n       cls = [ ...cls, classes[props.state]]\r\n    }\r\n\r\n    return (\r\n        <li\r\n            className={cls.join(' ')}\r\n            onClick={ () => {props.onAnswerClick(Number(props.answer.id))}}\r\n        >\r\n            { props.answer.text}\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default AnswerItem","import React from 'react'\r\nimport classes from './AnswersList.module.css'\r\nimport AnswerItem from \"./AnswerItem/AnswerItem\";\r\n\r\nconst AnswersList = props => {\r\n\r\n    return (\r\n        <ul className={classes.AnswersList}>\r\n            { props.answers.map( (answer, index) => {\r\n                return <AnswerItem\r\n                    onAnswerClick={props.onAnswerClick}\r\n                    key={index}\r\n                    answer={answer}\r\n                    state={props.state ? props.state[answer.id] : null}\r\n                />\r\n            })}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default AnswersList","import React from 'react'\r\nimport classes from './ActiveQuiz.module.css'\r\nimport AnswersList from \"../AnswersList/AnswersList\";\r\n\r\nconst ActiveQuiz = (props) => {\r\n\r\nreturn (\r\n    <div className={classes.ActiveQuiz}>\r\n        <p className={classes.Question}>\r\n        <span>\r\n            <strong>{props.answerNumber}.</strong>&nbsp;\r\n            {props.question}\r\n        </span>\r\n\r\n            <small>{props.answerNumber}/{props.quizLenght}</small>\r\n        </p>\r\n\r\n        <AnswersList\r\n            answers={props.answers}\r\n            onAnswerClick={props.onAnswerClick}\r\n            state={props.state}\r\n        />\r\n    </div>\r\n    )\r\n}\r\nexport default ActiveQuiz","import React from 'react'\r\nimport classes from './Button.module.css'\r\n\r\nconst Button = props => {\r\n\r\n    const cls = [\r\n        classes.Button,\r\n        classes[props.type]\r\n    ]\r\n\r\n\r\n    return (\r\n        <button\r\n            onClick={ props.onClick }\r\n            className={cls.join(' ')}\r\n            disabled={props.disabled}\r\n        >\r\n            { props.children }\r\n        </button>\r\n    )\r\n\r\n}\r\n\r\nexport default Button","import React from 'react'\r\nimport classes from './FinishQuiz.module.css'\r\nimport Button from \"../UI/Button/Button\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst FinishQuiz = props => {\r\n\r\n    console.log('props.results', props.results)\r\n\r\n    const successCount = Object.keys(props.results).reduce( (total, key) => {\r\n        if(props.results[key] === 'success')\r\n        {\r\n            total++\r\n        }\r\n        return total\r\n    }, 0)\r\n\r\n    return (\r\n        <div className={classes.FinishQuiz}>\r\n            <ul>\r\n                { props.quiz.map( (quizItem, index) => {\r\n                    const cls = [\r\n                        'fa',\r\n                        props.results[quizItem.id] === 'error' ? 'fa-times '+ classes.error : 'fa-check ' + classes.success\r\n                    ]\r\n\r\n                    return (\r\n                        <li key={index}>\r\n                            <strong>{ index + 1 }.</strong>&nbsp; {quizItem.questuon}\r\n                            <i className={ cls.join(' ')} />\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n\r\n            <p>Правильно {successCount} из {props.quiz.length}</p>\r\n\r\n            <div>\r\n               <Button onClick={props.onRetry} type='primary'>Повторить</Button>\r\n               <Link to={'/'}>\r\n                   <Button onClick={props.onRetry} type='success'>Вернуться ко всем тестам</Button>\r\n               </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FinishQuiz","import React from 'react'\r\nimport classes from './Loader.module.css'\r\n\r\nconst Loader = props => (\r\n    <div className={classes.center}>\r\n        <div className={classes.Loader}>\r\n            <div /><div />\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default Loader","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://react-quiz-93a24-default-rtdb.firebaseio.com/'\r\n})\r\n\r\n\r\n","export const FETCH_QUIZES_START = 'FETCH_QUIZES_START'\r\nexport const FETCH_QUIZES_SUCCES = 'FETCH_QUIZES_SUCCES'\r\nexport const FETCH_QUIZES_ERROR = 'FETCH_QUIZES_ERROR'\r\n\r\n\r\nexport const FETCH_QUIZ_SUCCES = 'FETCH_QUIZ_SUCCES'\r\n\r\nexport const QUIZE_SET_STATE = 'QUIZE_SET_STATE'\r\nexport const FINISH_QUIZ = 'FINISH_QUIZ'\r\nexport const QUIZ_NEXT_QUESTION = 'QUIZ_NEXT_QUESTION'\r\nexport const RETRY_QUIZ = 'RETRY_QUIZ'\r\n\r\n\r\nexport const CREATE_QUIZ_QUESTION = 'CREATE_QUIZ_QUESTION'\r\nexport const RESET_QUIZ_CREATION = 'RESET_QUIZ_CREATION'\r\n\r\n\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS'\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT'","import axios from \"../../axios/axiosQuiz\";\r\nimport {\r\n    FETCH_QUIZ_SUCCES,\r\n    FETCH_QUIZES_ERROR,\r\n    FETCH_QUIZES_START,\r\n    FETCH_QUIZES_SUCCES,\r\n    FINISH_QUIZ, QUIZ_NEXT_QUESTION, QUIZE_SET_STATE, RETRY_QUIZ\r\n} from \"./actionTypes\";\r\n\r\nexport function fetchQuizes() {\r\n    return async dispatch => {\r\n\r\n        dispatch(fetchQuizesStart())\r\n\r\n        try {\r\n            const response = await axios.get('quiz.json')\r\n\r\n            let quizes = []\r\n\r\n            Object.keys(response.data).forEach((key, index) => {\r\n                let itemName = {\r\n                    id: key,\r\n                    name: `Тест №${index + 1}`\r\n                }\r\n                quizes = [...quizes, itemName]\r\n            })\r\n\r\n            dispatch(fetchQuizesSucces(quizes))\r\n        } catch (e) {\r\n            dispatch(fetchQuizesError(e))\r\n        }\r\n    }\r\n}\r\n\r\nexport function fetchQuizesStart() {\r\n    return {\r\n        type: FETCH_QUIZES_START\r\n    }\r\n}\r\n\r\nexport function fetchQuizesSucces(quizes) {\r\n    return {\r\n        type: FETCH_QUIZES_SUCCES,\r\n        quizes: quizes\r\n    }\r\n}\r\n\r\nexport function fetchQuizesError(e) {\r\n    return {\r\n        type: FETCH_QUIZES_ERROR,\r\n        error: e\r\n    }\r\n}\r\n\r\nexport function fetchQuizById(quizeId) {\r\n\r\n    return async dispatch => {\r\n        dispatch(fetchQuizesStart())\r\n\r\n        try {\r\n            const response = await axios.get(`quiz/${quizeId}.json`)\r\n            const quiz = response.data\r\n\r\n            dispatch(fetchQuizSuccess(quiz))\r\n\r\n        } catch (e) {\r\n            dispatch(fetchQuizesError(e))\r\n        }\r\n    }\r\n}\r\n\r\nexport function fetchQuizSuccess(quiz) {\r\n    return {\r\n        type: FETCH_QUIZ_SUCCES,\r\n        quiz\r\n    }\r\n}\r\n\r\nexport function quizSetState(answerState, results) {\r\n    return {\r\n        type: QUIZE_SET_STATE,\r\n        answerState,\r\n        results\r\n    }\r\n}\r\n\r\nexport function finishQuiz() {\r\n    return {\r\n        type: FINISH_QUIZ,\r\n    }\r\n}\r\n\r\nexport function quizNextQuestion(number) {\r\n    return {\r\n        type: QUIZ_NEXT_QUESTION,\r\n        number\r\n    }\r\n}\r\n\r\n\r\nexport function isQuizFinished(activeQuestion, length) {\r\n        return activeQuestion + 1 === length\r\n}\r\n\r\n\r\nexport function quizAnswerClick(answerId) {\r\n    return (dispatch, getState) => {\r\n\r\n\r\n        console.log('getState',  );\r\n\r\n        const state = getState().quizReducer\r\n\r\n        if (state.answerState && state.answerState[answerId] === 'success') {\r\n            return\r\n        }\r\n\r\n        const question = state.quiz[state.activeQuestion]\r\n        const results = state.results\r\n\r\n        if (question.rightAnswerId === answerId) {\r\n            if (!results[question.id]) {\r\n                results[question.id] = 'success'\r\n            }\r\n\r\n            dispatch(quizSetState({[answerId]: 'success'}, results))\r\n\r\n            const timeout = window.setTimeout(() => {\r\n\r\n                if (isQuizFinished(state.activeQuestion, state.quiz.length)) {\r\n                    dispatch(finishQuiz())\r\n                } else {\r\n                    dispatch(quizNextQuestion(state.activeQuestion + 1))\r\n                }\r\n                window.clearTimeout(timeout)\r\n            }, 100)\r\n\r\n\r\n        } else {\r\n            results[question.id] = 'error'\r\n            dispatch(quizSetState({[answerId]: 'error'}, results))\r\n        }\r\n    }\r\n}\r\n\r\nexport default function retryQuizFunction() {\r\n    return {\r\n        type: RETRY_QUIZ,\r\n    }\r\n}","import React, {Component} from 'react'\r\nimport classes from './Quiz.module.css'\r\nimport ActiveQuiz from \"../../components/ActiveQuiz/ActiveQuiz\";\r\nimport FinishQuiz from \"../../components/FinishQuiz/FinishQuiz\";\r\nimport Loader from \"../../components/UI/Loader/Loader\";\r\nimport {connect} from \"react-redux\";\r\nimport retryQuizFunction, {fetchQuizById, fetchQuizes, quizAnswerClick} from \"../../store/actions/quiz\";\r\n\r\nclass Quiz extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchQuizById(this.props.match.params.id)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.retryQuiz()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.Quiz}>\r\n\r\n                <div className={classes.QuizWrapper}>\r\n                    <h1>Ответьте на все вопросы</h1>\r\n\r\n                    {\r\n                        this.props.loading || !this.props.quiz\r\n                            ? <Loader />\r\n                            : this.props.isFinish\r\n                            ? <FinishQuiz\r\n                                results={this.props.results}\r\n                                quiz={this.props.quiz}\r\n                                onRetry ={this.props.retryQuiz}\r\n                            />\r\n                            : <ActiveQuiz\r\n                                question={this.props.quiz[this.props.activeQuestion].question}\r\n                                answers={this.props.quiz[this.props.activeQuestion].answers}\r\n                                onAnswerClick={this.props.quizAnswerClick}\r\n                                quizLenght={this.props.quiz.length}\r\n                                answerNumber={this.props.activeQuestion + 1}\r\n                                state={this.props.answerState}\r\n                            />\r\n\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        results: state.quizReducer.results,\r\n        isFinish: state.quizReducer.isFinish,\r\n        activeQuestion: state.quizReducer.activeQuestion,\r\n        answerState: state.quizReducer.answerState,\r\n        quiz: state.quizReducer.quiz,\r\n        loading: state.quizReducer.loading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchQuizById: id => dispatch(fetchQuizById(id)),\r\n        quizAnswerClick: answerId => dispatch(quizAnswerClick(answerId)),\r\n        retryQuiz: () => dispatch(retryQuizFunction())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz)","import React, {Component} from 'react'\r\nimport classes from './QuizList.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Loader from \"../../components/UI/Loader/Loader\";\r\nimport {connect} from \"react-redux\";\r\nimport {fetchQuizes} from \"../../store/actions/quiz\";\r\n\r\nclass QuizList extends Component {\r\n\r\n    renderQuizes() {\r\n        return this.props.quizes.map((quiz) => {\r\n            return (\r\n                <li\r\n                    key={quiz.id}\r\n                >\r\n                    <NavLink to={'/quiz/' + quiz.id}>\r\n                        {quiz.name}\r\n                    </NavLink>\r\n\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.fetchQuizes()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.QuizList}>\r\n                <div>\r\n                    <h1>Список тестов</h1>\r\n\r\n                    {\r\n                        this.props.loading && this.props.quizes.length !== 0\r\n                            ? <Loader/>\r\n                            : <ul>{this.renderQuizes()}</ul>\r\n                    }\r\n\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        quizes: state.quizReducer.quizes,\r\n        loading: state.quizReducer.loading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchQuizes: () => dispatch(fetchQuizes())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizList)","export function creacteControl (config, validation) {\r\n    return {\r\n        ...config,\r\n        validation,\r\n        valid: !validation,\r\n        touched: false,\r\n        value: ''\r\n    }\r\n}\r\n\r\nexport function validateFramework(value, validation = null) {\r\n    if(!validation) {\r\n        return true\r\n    }\r\n\r\n    let isValid = true\r\n\r\n    if(validation.required) {\r\n        isValid = value.trim() !== '' &&  isValid\r\n    }\r\n\r\n    return isValid\r\n}\r\n\r\nexport function validateFormFramework(formControls) {\r\n    let isFormValid = true\r\n\r\n    for (let control in formControls) {\r\n        if(formControls.hasOwnProperty(control)) {\r\n            isFormValid = formControls[control].valid && isFormValid\r\n        }\r\n    }\r\n\r\n    return isFormValid\r\n}","import React, {Component} from 'react'\r\nimport classes from './Input.module.css'\r\n\r\n//валидация\r\nfunction isInvalid({valid, touched, shouldValidate}) {\r\n    //если не валидный, если нужна валидация, и если мы к нему прикасались\r\n    return !valid && shouldValidate && touched\r\n}\r\n\r\nconst Input = props => {\r\n\r\n    const inputType = props.type || 'text'\r\n    let cls = [classes.Input]\r\n    const htmlFor = `${inputType}-${Math.random()}`\r\n\r\n    if(isInvalid(props)) {\r\n        cls = [...cls, classes.invalid]\r\n    }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n            <label htmlFor={htmlFor}>{props.label}</label>\r\n            <input\r\n                type={props.type}\r\n                id={htmlFor}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n            />\r\n            {\r\n                isInvalid(props) ? <span>{props.errorMessage}</span> : null\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Input","import React, {Component} from 'react'\r\nimport classes from './Select.module.css'\r\n\r\nconst Select = props => {\r\n    const htmlFor = `${props.label}-${Math.random()}`\r\n\r\n    return (\r\n        <div className={classes.Select}>\r\n            <label htmlFor={htmlFor}>{props.label}</label>\r\n            <select\r\n                id={htmlFor}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n            >\r\n\r\n            { props.options.map( (option, index) => {\r\n                return <option\r\n                            value={option.value}\r\n                            key={option.value + index}\r\n                        >\r\n                        { option.text }\r\n                       </option>\r\n            })}\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Select","import {CREATE_QUIZ_QUESTION, RESET_QUIZ_CREATION} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    quiz: []\r\n}\r\n\r\nconst createReduser = (state = initialState, action) => {\r\n    switch (action.type){\r\n        case CREATE_QUIZ_QUESTION:\r\n            return {\r\n                ...state,\r\n                quiz: [...state.quiz, action.item]\r\n            }\r\n        case RESET_QUIZ_CREATION:\r\n            return {\r\n                ...state,\r\n                quiz: []\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default createReduser","import React, {Component} from 'react'\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport classes from \"./QuizCreator.module.css\"\r\nimport {creacteControl, validateFramework, validateFormFramework} from \"../../components/Form/formFramework\";\r\nimport Input from \"../../components/UI/Input/Input\";\r\nimport Select from \"../../components/UI/Select/Select\";\r\nimport axios from \"../../axios/axiosQuiz\"\r\nimport {connect} from \"react-redux\";\r\nimport {createQuizeQuestion, finishCreateQuiz} from \"../../store/actions/create\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nfunction createOptionControl(number) {\r\n    return creacteControl({\r\n        label: `Вариант ${number}` ,\r\n        errorMessage: 'Вариант не может быть пустым',\r\n        id: number\r\n    }, {required: true})\r\n}\r\n\r\nfunction createFormControls() {\r\n    return (\r\n        {\r\n            question: creacteControl({\r\n                label: 'Введите вопрос',\r\n                errorMessage: 'Вопрос не может быть пустым'\r\n            }, {required: true}),\r\n            option1: createOptionControl(1),\r\n            option2: createOptionControl(2),\r\n            option3: createOptionControl(3),\r\n            option4: createOptionControl(4)\r\n        }\r\n    )\r\n}\r\n\r\nclass QuizCreator extends Component {\r\n\r\n    state = {\r\n        rightAnswerId: 1,\r\n        isFormValid: false,\r\n        formControls: createFormControls()\r\n    }\r\n\r\n\r\n    submitHandler = event => {\r\n        event.preventDefault()\r\n    }\r\n\r\n    addQuestionHandler = () => {\r\n        /*let quiz = [ ...this.state.quiz]\r\n        const index = quiz.length + 1*/\r\n\r\n        const {question, option1, option2, option3, option4} = this.state.formControls //деструкторизайия объекта\r\n\r\n        const questionItem = {\r\n            id: this.props.quiz.length + 1,\r\n            question: question.value,\r\n            rightAnswerId: this.state.rightAnswerId,\r\n            answers: [\r\n                {text: option1.value, id: option1.id},\r\n                {text: option2.value, id: option2.id},\r\n                {text: option3.value, id: option3.id},\r\n                {text: option4.value, id: option4.id}\r\n            ]\r\n        }\r\n\r\n        this.props.createQuizeQuestion(questionItem)\r\n      /*  quiz = [ ...quiz, questionItem]*/\r\n        this.setState({\r\n            rightAnswerId: 1,\r\n            isFormValid: false,\r\n            formControls: createFormControls()\r\n        })\r\n\r\n    }\r\n\r\n    createQuizHandler = () => {\r\n\r\n        this.setState({\r\n            rightAnswerId: 1,\r\n            isFormValid: false,\r\n            formControls: createFormControls()\r\n        })\r\n\r\n        this.props.finishCreateQuiz().then(response => {\r\n            this.props.history.push(\"/\")\r\n        })\r\n\r\n\r\n\r\n    }\r\n\r\n    onChangeHandler = (value, controlName) => {\r\n\r\n        const formControls = { ...this.state.formControls }\r\n        const control = { ...formControls[controlName] }\r\n\r\n        control.touched = true\r\n        control.value = value\r\n        control.valid = validateFramework(control.value, control.validation)\r\n\r\n        formControls[controlName] = control\r\n\r\n        this.setState({\r\n            formControls,\r\n            isFormValid: validateFormFramework(formControls)\r\n        })\r\n\r\n    }\r\n\r\n    renderControls () {\r\n        return Object.keys(this.state.formControls).map( (controlName, index) => {\r\n            const control = this.state.formControls[controlName]\r\n\r\n\r\n            return (\r\n                <React.Fragment key={controlName + index}>\r\n                    <Input\r\n                        label={control.label}\r\n                        value={control.value}\r\n                        valid={control.valid}\r\n                        shouldValidate={!!control.validation}\r\n                        touched={control.touched}\r\n                        type={control.type}\r\n                        errorMessage={control.errorMessage}\r\n                        onChange={event => this.onChangeHandler(event.target.value, controlName)}\r\n                    />\r\n                    { index === 1 ? <hr /> : null }\r\n                </React.Fragment>\r\n            )\r\n        })\r\n    }\r\n\r\n    selectChangeHandler = event => {\r\n\r\n       this.setState({\r\n           rightAnswerId: +event.target.value\r\n       })\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const select = <Select\r\n            label='Выберите правильный ответ'\r\n            value={this.state.rightAnswerId}\r\n            onChange={this.selectChangeHandler}\r\n            options={[\r\n                {text:1, value:1},\r\n                {text:2, value:2},\r\n                {text:3, value:3},\r\n                {text:4, value:4}\r\n            ]}\r\n        />\r\n\r\n        return (\r\n            <div className={classes.QuizCreator}>\r\n                <div>\r\n                    <h1>Создание теста</h1>\r\n\r\n                    <form onSubmit={this.submitHandler}>\r\n\r\n                        { this.renderControls() }\r\n\r\n                        { select }\r\n\r\n\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={this.addQuestionHandler}\r\n                            disabled={!this.state.isFormValid}\r\n                        >\r\n                            Добавить вопрос\r\n                        </Button>\r\n\r\n                        <Button\r\n                            type=\"success\"\r\n                            onClick={this.createQuizHandler}\r\n                            disabled={this.props.quiz.length === 0}\r\n                        >\r\n                            Создать тест\r\n                        </Button>\r\n                    </form>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        quiz: state.createReduser.quiz,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createQuizeQuestion: item => dispatch(createQuizeQuestion(item)),\r\n        finishCreateQuiz: () => dispatch(finishCreateQuiz())\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizCreator)","import {CREATE_QUIZ_QUESTION, RESET_QUIZ_CREATION} from \"./actionTypes\";\r\nimport axios from \"../../axios/axiosQuiz\";\r\nimport createReduser from \"../reduser/create\";\r\n\r\nexport function createQuizeQuestion(item) {\r\n\r\n    return {\r\n        type: CREATE_QUIZ_QUESTION,\r\n        item\r\n    }\r\n}\r\n\r\nexport function resetQuizCreation() {\r\n    return {\r\n        type: RESET_QUIZ_CREATION\r\n    }\r\n}\r\n\r\nexport function finishCreateQuiz() {\r\n    return async (dispatch, getState) => {\r\n        await axios.post('quiz.json', getState().createReduser.quiz)\r\n        dispatch(resetQuizCreation())\r\n    }\r\n}","import axios from \"axios\";\r\nimport {AUTH_LOGOUT, AUTH_SUCCESS} from \"./actionTypes\";\r\n\r\nexport function auth(email, password, isLogin) {\r\n    return async dispatch => {\r\n\r\n        const authData = {\r\n            email,\r\n            password,\r\n            returnSecureToken: true\r\n        }\r\n\r\n        let url = ''\r\n\r\n        if (isLogin) {\r\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBiPNjYynqlIyylpSb6zCRHIjCV5J3KDUw'\r\n        } else {\r\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBiPNjYynqlIyylpSb6zCRHIjCV5J3KDUw'\r\n        }\r\n\r\n        const response = await axios.post(url, authData)\r\n        const data = response.data\r\n\r\n        const expirationDate = new Date(new Date().getTime() + data.expiresIn * 1000)\r\n\r\n        localStorage.setItem('token', data.idToken)\r\n        localStorage.setItem('userId', data.localId)\r\n        localStorage.setItem('expirationDate', expirationDate)\r\n\r\n        dispatch(authSuccess(data.idToken))\r\n        dispatch(autoLogout(data.expiresIn))\r\n\r\n    }\r\n}\r\n\r\nexport function autoLogout(time) {\r\n    return dispath => {\r\n        setTimeout( () => {\r\n            dispath(logout())\r\n        }, time* 1000)\r\n    }\r\n}\r\n\r\nexport function logout() {\r\n\r\n    localStorage.removeItem('token')\r\n    localStorage.removeItem('userId')\r\n    localStorage.removeItem('expirationDate')\r\n\r\n    return {\r\n        type: AUTH_LOGOUT\r\n    }\r\n}\r\n\r\nexport function authSuccess(token) {\r\n    return {\r\n        type: AUTH_SUCCESS,\r\n        token\r\n    }\r\n}\r\n\r\nexport function autoLogin(token) {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token')\r\n        if(!token) {\r\n            dispatch(logout())\r\n        } else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'))\r\n            if(expirationDate <= new Date()){\r\n                dispatch(logout())\r\n            } else {\r\n                dispatch(authSuccess(token))\r\n                dispatch(autoLogout((expirationDate.getTime() - new Date().getTime()) / 1000))\r\n            }\r\n        }\r\n    }\r\n}","import React, {Component} from 'react'\r\nimport classes from './Auth.module.css'\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport Input from \"../../components/UI/Input/Input\";\r\nimport is from 'is_js'\r\nimport axios from \"../../axios/axiosQuiz\";\r\nimport {connect} from \"react-redux\";\r\nimport retryQuizFunction, {fetchQuizById, quizAnswerClick} from \"../../store/actions/quiz\";\r\nimport {auth} from \"../../store/actions/auth\";\r\n\r\nclass Auth extends Component {\r\n\r\n    state = {\r\n        isFormValid: false,\r\n        formControls: {\r\n            email: {\r\n                value: '',\r\n                type: 'email',\r\n                label: 'Email',\r\n                errorMessage: 'Введите корректный Email',\r\n                valid: false,\r\n                touched: false,\r\n                validation: {\r\n                    required: true,\r\n                    email: true\r\n                }\r\n            },\r\n            password: {\r\n                value: '',\r\n                type: 'password',\r\n                label: 'Пароль',\r\n                errorMessage: 'Пароль должен быть больше 5 символов',\r\n                valid: false,\r\n                touched: false,\r\n                validation: {\r\n                    required: true,\r\n                    minLenght: 6\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    loginHandler = () => {\r\n        this.props.auth(\r\n            this.state.formControls.email.value,\r\n            this.state.formControls.password.value,\r\n            true\r\n        )\r\n    }\r\n\r\n    registerHandler = () => {\r\n        this.props.auth(\r\n            this.state.formControls.email.value,\r\n            this.state.formControls.password.value,\r\n            false\r\n        )\r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault()\r\n    }\r\n\r\n    validateControl = (value, validation) => {\r\n        if (!validation) {\r\n            return true\r\n        }\r\n\r\n        let isValue = true\r\n\r\n        if (validation.required) {\r\n            isValue = value.trim() !== '' && isValue\r\n        }\r\n\r\n        if (validation.email) {\r\n            isValue = is.email(value)\r\n        }\r\n\r\n        if (validation.minLenght) {\r\n            isValue = value.length >= validation.minLenght && isValue\r\n        }\r\n\r\n        return isValue\r\n\r\n    }\r\n\r\n    onChangeHandler = (event, controlName) => {\r\n\r\n        const formControls = {...this.state.formControls}\r\n        const control = {...formControls[controlName]}\r\n\r\n        control.value = event.target.value\r\n        control.touched = true\r\n        control.valid = this.validateControl(control.value, control.validation)\r\n\r\n        formControls[controlName] = control\r\n\r\n        let isFormValid = true\r\n\r\n        //проходим по копии массива, уже новому\r\n        Object.keys(formControls).forEach(name => {\r\n            isFormValid = formControls[name].valid && isFormValid\r\n        })\r\n\r\n        this.setState({\r\n            formControls,\r\n            isFormValid\r\n        })\r\n    }\r\n\r\n    renderInputs() {\r\n        return Object.keys(this.state.formControls).map((controlname, index) => {\r\n            const control = this.state.formControls[controlname]\r\n            return (\r\n                <Input\r\n                    key={index}\r\n                    type={control.type}\r\n                    value={control.value}\r\n                    valid={control.valid}\r\n                    touched={control.touched}\r\n                    label={control.label}\r\n                    shouldValidate={!!control.validation}\r\n                    errorMessage={control.errorMessage}\r\n                    onChange={event => this.onChangeHandler(event, controlname)}\r\n                />\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className={classes.Auth}>\r\n                <div>\r\n                    <h1>Авторизация</h1>\r\n\r\n                    <form onSubmit={this.submitHandler} className={classes.AuthForm}>\r\n\r\n                        {this.renderInputs()}\r\n\r\n                        <Button\r\n                            type={'success'}\r\n                            onClick={this.loginHandler}\r\n                            disabled={!this.state.isFormValid}\r\n                        >\r\n                            Войти\r\n                        </Button>\r\n                        <Button\r\n                            type={'primary'}\r\n                            onClick={this.registerHandler}\r\n                            disabled={!this.state.isFormValid}\r\n                        >\r\n                            Зарегестрирвоаться\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        auth: (email, password, isLogin) => dispatch( auth(email, password, isLogin) )\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Auth)","import {AUTH_LOGOUT, AUTH_SUCCESS} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    token: null\r\n}\r\n\r\nconst authReduser = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case AUTH_SUCCESS:\r\n            return {\r\n                ...state, token: action.token\r\n            }\r\n        case AUTH_LOGOUT:\r\n            return {\r\n                ...state, token: null\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default authReduser","import React, {Component} from 'react'\r\nimport {logout} from \"../../store/actions/auth\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass Logout extends Component {\r\n    componentDidMount() {\r\n        this.props.logout()\r\n    }\r\n\r\n    render() {\r\n        return <Redirect to={'/'} />\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        logout: () => dispatch(logout())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout)","import './App.css';\nimport Layout from \"./hoc/Layout/Layout\";\nimport Quiz from \"./containers/Quiz/Quiz\";\nimport {Redirect, Route, Switch, withRouter} from \"react-router-dom\";\nimport QuizList from \"./containers/QuizList/QuizList\";\nimport QuizCreator from \"./containers/QuizCreator/QuizCreator\";\nimport Auth from \"./containers/Auth/Auth\";\nimport {connect} from \"react-redux\";\nimport authReduser from \"./store/reduser/auth\";\nimport React, {Component} from \"react\";\nimport Logout from \"./components/Logout/Logout\";\nimport {autoLogin} from \"./store/actions/auth\";\n\n\nclass App extends Component {\n\n    componentDidMount() {\n        this.props.autoLogin()\n    }\n\n    render() {\n\n        let routes = (\n            <Switch>\n                <Route path={'/auth'} component={Auth}/>\n                <Route path={'/quiz/:id'} component={Quiz}/>\n                <Route path={'/'} exact component={QuizList}/>\n                <Redirect to={'/'} />\n            </Switch>\n        )\n\n        if(this.props.isAut){\n            routes = (\n                <Switch>\n                    <Route path={'/quiz-creator'} component={QuizCreator}/>\n                    <Route path={'/quiz/:id'} component={Quiz}/>\n                    <Route path={'/logout'} component={Logout}/>\n                    <Route path={'/'} exact component={QuizList}/>\n                    <Redirect to={'/'} />\n                </Switch>\n            )\n        }\n\n        return (\n            <Layout>\n                {routes}\n            </Layout>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isAut: !!state.authReduser.token\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        autoLogin: () => dispatch(autoLogin())\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n    FETCH_QUIZ_SUCCES,\r\n    FETCH_QUIZES_ERROR,\r\n    FETCH_QUIZES_START,\r\n    FETCH_QUIZES_SUCCES,\r\n    FINISH_QUIZ,\r\n    QUIZ_NEXT_QUESTION,\r\n    QUIZE_SET_STATE,\r\n    RETRY_QUIZ\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    quizes: [],\r\n    loading: false,\r\n    results: {}, // {[id]: success error }\r\n    isFinish: false,\r\n    activeQuestion: 0,\r\n    answerState: null, // { [id]: 'success' 'error' }\r\n    quiz: null\r\n}\r\n\r\nexport default function quizReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case FETCH_QUIZES_START:\r\n            return {\r\n                ...state, loading: true\r\n            }\r\n        case FETCH_QUIZES_SUCCES:\r\n            return {\r\n                ...state, loading: false, quizes: action.quizes\r\n            }\r\n        case FETCH_QUIZES_ERROR:\r\n            return {\r\n                ...state, loading: false, error: action.error\r\n            }\r\n        case FETCH_QUIZ_SUCCES:\r\n            return {\r\n                ...state, loading: false, quiz: action.quiz\r\n            }\r\n        case QUIZE_SET_STATE:\r\n            return {\r\n                ...state, loading: false, answerState: action.answerState, results: action.results\r\n            }\r\n        case FINISH_QUIZ:\r\n            return {\r\n                ...state, isFinish: true\r\n            }\r\n        case QUIZ_NEXT_QUESTION:\r\n            return {\r\n                ...state, activeQuestion: action.number, answerState: null\r\n            }\r\n        case RETRY_QUIZ:\r\n            return {\r\n                ...state,\r\n                results: {}, // {[id]: success error }\r\n                isFinish: false,\r\n                activeQuestion: 0,\r\n                answerState: null, // { [id]: 'success' 'error' }\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {combineReducers} from \"redux\";\r\nimport quizReducer from \"./quiz\";\r\nimport createReduser from \"./create\";\r\nimport authReduser from \"./auth\";\r\n\r\nexport default combineReducers({\r\n    quizReducer,\r\n    createReduser,\r\n    authReduser\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {compose, createStore, applyMiddleware} from \"redux\";\nimport {Provider} from \"react-redux\";\nimport rootReduser from \"./store/reduser/rootReduser\"\nimport thunk from \"redux-thunk\";\n\n\nconst composeEnhancers =\n    typeof window === 'object' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        }) : compose;\n\nconst store = createStore(rootReduser, composeEnhancers(applyMiddleware(thunk)))\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <BrowserRouter>\n              <App />\n          </BrowserRouter>\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}