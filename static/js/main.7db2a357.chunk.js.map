{"version":3,"sources":["components/Navigation/Drawer/Drawer.module.css","components/FinishQuiz/FinishQuiz.module.css","components/Navigation/MenuToggle/MenuToggle.module.css","containers/Quiz/Quiz.module.css","components/ActiveQuiz/ActiveQuiz.module.css","components/AnswersList/AnswerItem/AnswerItem.module.css","components/UI/Button/Button.module.css","components/UI/Input/Input.module.css","containers/Auth/Auth.module.css","hoc/Layout/Layout.module.css","components/UI/Backdrop/Backdrop.module.css","components/AnswersList/AnswersList.module.css","containers/QuizList/QuizList.module.css","containers/QuizCreator/QuizCreator.module.css","components/UI/Select/Select.module.css","components/Navigation/MenuToggle/MenuToggle.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Drawer/Drawer.js","hoc/Layout/Layout.js","components/AnswersList/AnswerItem/AnswerItem.js","components/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/UI/Button/Button.js","components/FinishQuiz/FinishQuiz.js","containers/Quiz/Quiz.js","containers/QuizList/QuizList.js","components/Form/formFramework.js","components/UI/Input/Input.js","components/UI/Select/Select.js","containers/QuizCreator/QuizCreator.js","containers/Auth/Auth.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","MenuToogle","props","cls","classes","MenuTooggle","isOpen","open","className","join","onClick","onToggle","Backdrop","links","to","label","exact","Drawer","map","link","index","activeClassName","active","onClickHandler","this","close","renderLinks","Component","Layout","state","menu","toogleMenuHandlerr","setState","children","AnswerItem","onAnswerClick","Number","answer","id","text","AnswersList","answers","ActiveQuiz","Question","answerNumber","questuon","quizLenght","Button","type","disabled","FinishQuiz","console","log","results","successCount","Object","keys","reduce","total","key","quiz","quizItem","error","success","length","onRetry","Quiz","isFinish","activeQuestion","answerState","rightAnswerId","onAnswerClickHandler","answerId","question","timeout","window","setTimeout","isQuizFinished","clearTimeout","retryHandler","match","params","QuizWrapper","QuizList","renderQuizes","creacteControl","config","validation","valid","touched","value","validateFramework","isValid","required","trim","validateFormFramework","formControls","isFormValid","control","hasOwnProperty","isInvalid","shouldValidate","Input","inputType","htmlFor","Math","random","invalid","onChange","errorMessage","Select","options","option","createOptionControl","number","createFormControls","option1","option2","option3","option4","QuizCreator","submitHandler","event","preventDefault","addQuestionHandler","answes","createQuizHandler","onChangeHandler","controlName","selectChangeHandler","target","Fragment","select","onSubmit","renderControls","Auth","email","password","minLenght","loginHandler","registerHandler","validateControl","isValue","is","forEach","name","controlname","AuthForm","renderInputs","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7db2a357.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer_Drawer__3SVfj\",\"close\":\"Drawer_close__11_gu\",\"active\":\"Drawer_active__OE3hE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishQuiz\":\"FinishQuiz_FinishQuiz__3LHZu\",\"success\":\"FinishQuiz_success__3BSrv\",\"error\":\"FinishQuiz_error__PXebx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuTooggle\":\"MenuToggle_MenuTooggle__2Tm56\",\"open\":\"MenuToggle_open__otP2c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__1_zoW\",\"QuizWrapper\":\"Quiz_QuizWrapper__2NdGN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz_ActiveQuiz__Trg1g\",\"Question\":\"ActiveQuiz_Question__3dsSZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__2e29j\",\"success\":\"AnswerItem_success__1_DqW\",\"error\":\"AnswerItem_error__2zdeb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2MgK3\",\"success\":\"Button_success__1Z7w7\",\"error\":\"Button_error__3Om4B\",\"primary\":\"Button_primary__3hpJM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__12RMz\",\"invalid\":\"Input_invalid__1l3Ge\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__1Z_0W\",\"AuthForm\":\"Auth_AuthForm__3KLbZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__3acRj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__2SenO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList_AnswersList__2RjgF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"QuizList_QuizList__2ldy4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizCreator\":\"QuizCreator_QuizCreator__3OeZd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select_Select__3tgQW\"};","import React, {Component} from 'react'\r\nimport classes from './MenuToggle.module.css'\r\n\r\n\r\nconst MenuToogle = props => {\r\n    let cls = [\r\n        classes.MenuTooggle,\r\n        'fa'\r\n    ]\r\n\r\n    if (props.isOpen) {\r\n        cls = [ ...cls, 'fa-times']\r\n        cls = [ ...cls, classes.open]\r\n    } else {\r\n        cls = [ ...cls, 'fa-bars']\r\n    }\r\n\r\n    return (\r\n        <i\r\n            className={ cls.join(' ')}\r\n            onClick={ props.onToggle }\r\n        />\r\n    )\r\n}\r\n\r\nexport default MenuToogle","import React, {Component} from 'react'\r\nimport classes from './Backdrop.module.css'\r\n\r\n\r\nconst Backdrop = props => {\r\n    return (\r\n        <div className={classes.Backdrop} onClick={ props.onClick }></div>\r\n    )\r\n}\r\n\r\nexport default Backdrop\r\n","import React, {Component} from 'react'\r\nimport classes from './Drawer.module.css'\r\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst links = [\r\n    {to: '/', label: 'Список', exact: true},\r\n    {to: '/auth', label: 'Авторизация', exact: true},\r\n    {to: '/quiz-creator', label: 'Создать тест', exact: true},\r\n]\r\n\r\nclass Drawer extends Component {\r\n\r\n\r\n    renderLinks() {\r\n        return links.map( (link, index) => {\r\n            return (\r\n                <li key={index}>\r\n                    <NavLink\r\n                        to={link.to}\r\n                        exact={link.exact}\r\n                        activeClassName={classes.active}\r\n                        onClick={ this.props.onClickHandler }\r\n                    >\r\n                        {link.label}\r\n                    </NavLink>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        let cls = [classes.Drawer]\r\n\r\n        if(!this.props.isOpen) {\r\n            cls = [ ...cls, classes.close]\r\n        }\r\n\r\n\r\n        return (\r\n\r\n            <>\r\n\r\n                <nav className={cls.join(\" \")}>\r\n                    <ul>\r\n                        { this.renderLinks() }\r\n                    </ul>\r\n                </nav>\r\n\r\n                {\r\n                    this.props.isOpen ? <Backdrop onClick={ this.props.onClickHandler }/> : null\r\n                }\r\n\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Drawer","import React, {Component} from 'react'\r\nimport classes from './Layout.module.css'\r\nimport MenuToogle from \"../../components/Navigation/MenuToggle/MenuToggle\";\r\nimport Drawer from \"../../components/Navigation/Drawer/Drawer\";\r\n\r\nclass Layout extends Component {\r\n\r\n    state = {\r\n        menu: false\r\n    }\r\n\r\n    toogleMenuHandlerr = () => {\r\n        this.setState({\r\n            menu: !this.state.menu\r\n        })\r\n    }\r\n\r\n    onClickHandler = () => {\r\n        this.setState({\r\n            menu: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className={classes.Layout}>\r\n\r\n                <Drawer\r\n                    isOpen={this.state.menu}\r\n                    onClickHandler={this.onClickHandler}\r\n                />\r\n\r\n                <MenuToogle\r\n                    onToggle={this.toogleMenuHandlerr}\r\n                    isOpen={this.state.menu}\r\n                />\r\n\r\n                <main>\r\n                    { this.props.children }\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Layout","import React from 'react'\r\nimport classes from './AnswerItem.module.css'\r\n\r\nconst AnswerItem = props => {\r\n\r\n    let cls = [classes.AnswerItem]\r\n\r\n    if(props.state){\r\n       cls = [ ...cls, classes[props.state]]\r\n    }\r\n\r\n    return (\r\n        <li\r\n            className={cls.join(' ')}\r\n            onClick={ () => {props.onAnswerClick(Number(props.answer.id))}}\r\n        >\r\n            { props.answer.text}\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default AnswerItem","import React from 'react'\r\nimport classes from './AnswersList.module.css'\r\nimport AnswerItem from \"./AnswerItem/AnswerItem\";\r\n\r\nconst AnswersList = props => {\r\n\r\n    return (\r\n        <ul className={classes.AnswersList}>\r\n            { props.answers.map( (answer, index) => {\r\n                return <AnswerItem\r\n                    onAnswerClick={props.onAnswerClick}\r\n                    key={index}\r\n                    answer={answer}\r\n                    state={props.state ? props.state[answer.id] : null}\r\n                />\r\n            })}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default AnswersList","import React from 'react'\r\nimport classes from './ActiveQuiz.module.css'\r\nimport AnswersList from \"../AnswersList/AnswersList\";\r\n\r\nconst ActiveQuiz = (props) => {\r\n\r\nreturn (\r\n    <div className={classes.ActiveQuiz}>\r\n        <p className={classes.Question}>\r\n        <span>\r\n            <strong>{props.answerNumber}.</strong>&nbsp;\r\n            {props.questuon}\r\n        </span>\r\n\r\n            <small>{props.answerNumber}/{props.quizLenght}</small>\r\n        </p>\r\n\r\n        <AnswersList\r\n            answers={props.answers}\r\n            onAnswerClick={props.onAnswerClick}\r\n            state={props.state}\r\n        />\r\n    </div>\r\n    )\r\n}\r\nexport default ActiveQuiz","import React from 'react'\r\nimport classes from './Button.module.css'\r\n\r\nconst Button = props => {\r\n\r\n    const cls = [\r\n        classes.Button,\r\n        classes[props.type]\r\n    ]\r\n\r\n\r\n    return (\r\n        <button\r\n            onClick={ props.onClick }\r\n            className={cls.join(' ')}\r\n            disabled={props.disabled}\r\n        >\r\n            { props.children }\r\n        </button>\r\n    )\r\n\r\n}\r\n\r\nexport default Button","import React from 'react'\r\nimport classes from './FinishQuiz.module.css'\r\nimport Button from \"../UI/Button/Button\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst FinishQuiz = props => {\r\n\r\n    console.log('props.results', props.results)\r\n\r\n    const successCount = Object.keys(props.results).reduce( (total, key) => {\r\n        if(props.results[key] === 'success')\r\n        {\r\n            total++\r\n        }\r\n        return total\r\n    }, 0)\r\n\r\n    return (\r\n        <div className={classes.FinishQuiz}>\r\n            <ul>\r\n                { props.quiz.map( (quizItem, index) => {\r\n                    const cls = [\r\n                        'fa',\r\n                        props.results[quizItem.id] === 'error' ? 'fa-times '+ classes.error : 'fa-check ' + classes.success\r\n                    ]\r\n\r\n                    return (\r\n                        <li key={index}>\r\n                            <strong>{ index + 1 }.</strong>&nbsp; {quizItem.questuon}\r\n                            <i className={ cls.join(' ')} />\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n\r\n            <p>Правильно {successCount} из {props.quiz.length}</p>\r\n\r\n            <div>\r\n               <Button onClick={props.onRetry} type='primary'>Повторить</Button>\r\n               <Link to={'/'}>\r\n                   <Button onClick={props.onRetry} type='success'>Вернуться ко всем тестам</Button>\r\n               </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FinishQuiz","import React, {Component} from 'react'\r\nimport classes from './Quiz.module.css'\r\nimport ActiveQuiz from \"../../components/ActiveQuiz/ActiveQuiz\";\r\nimport FinishQuiz from \"../../components/FinishQuiz/FinishQuiz\";\r\n\r\nclass Quiz extends Component {\r\n\r\n    state = {\r\n        results: {}, // {[id]: success error }\r\n        isFinish: false,\r\n        activeQuestion: 0,\r\n        answerState: null, // { [id]: 'success' 'error' }\r\n        quiz: [\r\n            {\r\n                id: 1,\r\n                questuon: 'Какого цвета небо?',\r\n                rightAnswerId: 2,\r\n                answers: [\r\n                    {id:\"1\", text: 'Черный'},\r\n                    {id:\"2\", text: 'Синий'},\r\n                    {id:\"3\", text: 'Красный'},\r\n                    {id:\"4\", text: 'Зеленый'},\r\n                ]\r\n            },\r\n            {\r\n                id: 2,\r\n                questuon: 'В каком году основали Санкт-Петербург?',\r\n                rightAnswerId: 3,\r\n                answers: [\r\n                    {id:\"1\", text: '1700'},\r\n                    {id:\"2\", text: '1702'},\r\n                    {id:\"3\", text: '1703'},\r\n                    {id:\"4\", text: '1803'},\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n\r\n    onAnswerClickHandler = (answerId) => {\r\n\r\n\r\n        if (this.state.answerState && this.state.answerState[answerId] === 'success') {\r\n            return\r\n        }\r\n\r\n        const question = this.state.quiz[this.state.activeQuestion]\r\n        const results = this.state.results\r\n\r\n        if(question.rightAnswerId === answerId) {\r\n            if(!results[question.id]) {\r\n                results[question.id] = 'success'\r\n            }\r\n\r\n            this.setState({\r\n                answerState: { [answerId]: 'success'}\r\n            })\r\n\r\n            const timeout = window.setTimeout( ()=> {\r\n\r\n                if(this.isQuizFinished()) {\r\n\r\n                    this.setState({\r\n                        isFinish: true\r\n                    })\r\n\r\n                } else {\r\n                    this.setState({\r\n                        activeQuestion: this.state.activeQuestion + 1,\r\n                        answerState: null,\r\n                        results: results\r\n                    })\r\n                }\r\n\r\n                window.clearTimeout(timeout)\r\n            }, 100)\r\n\r\n\r\n        } else{\r\n\r\n            results[question.id] = 'error'\r\n            this.setState({\r\n                answerState: { [answerId]: 'error'},\r\n                results: results\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    isQuizFinished() {\r\n        return this.state.activeQuestion + 1 === this.state.quiz.length\r\n    }\r\n\r\n    retryHandler = () => {\r\n        this.setState({\r\n            results: {}, // {[id]: success error }\r\n            isFinish: false,\r\n            activeQuestion: 0,\r\n            answerState: null, // { [id]: 'success' 'error' }\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('Quize ID = ', this.props.match.params.id)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.Quiz}>\r\n\r\n                <div className={classes.QuizWrapper}>\r\n                    <h1>Ответьте на все вопросы</h1>\r\n\r\n                    {\r\n                        this.state.isFinish\r\n                            ? <FinishQuiz\r\n                                results={this.state.results}\r\n                                quiz={this.state.quiz}\r\n                                onRetry ={this.retryHandler}\r\n                            />\r\n                            : <ActiveQuiz questuon={this.state.quiz[this.state.activeQuestion].questuon}\r\n                                answers={this.state.quiz[this.state.activeQuestion].answers}\r\n                                onAnswerClick={this.onAnswerClickHandler}\r\n                                quizLenght={this.state.quiz.length}\r\n                                answerNumber={this.state.activeQuestion + 1}\r\n                                state={this.state.answerState}\r\n                                />\r\n\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Quiz","import React, {Component} from 'react'\r\nimport classes from './QuizList.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nclass QuizList extends Component {\r\n\r\n    renderQuizes () {\r\n        return [1,2,3].map( (quiz, index) => {\r\n            return (\r\n                <li\r\n                    key={index}\r\n                >\r\n                    <NavLink to={'/quiz/' + quiz}>\r\n                        Тест { index + 1 }\r\n                    </NavLink>\r\n\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.QuizList}>\r\n                <div>\r\n                    <h1>Список тестов</h1>\r\n\r\n                    <ul>\r\n                        { this.renderQuizes() }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default QuizList","export function creacteControl (config, validation) {\r\n    return {\r\n        ...config,\r\n        validation,\r\n        valid: !validation,\r\n        touched: false,\r\n        value: ''\r\n    }\r\n}\r\n\r\nexport function validateFramework(value, validation = null) {\r\n    if(!validation) {\r\n        return true\r\n    }\r\n\r\n    let isValid = true\r\n\r\n    if(validation.required) {\r\n        isValid = value.trim() !== '' &&  isValid\r\n    }\r\n\r\n    return isValid\r\n}\r\n\r\nexport function validateFormFramework(formControls) {\r\n    let isFormValid = true\r\n\r\n    for (let control in formControls) {\r\n        if(formControls.hasOwnProperty(control)) {\r\n            isFormValid = formControls[control].valid && isFormValid\r\n        }\r\n    }\r\n\r\n    return isFormValid\r\n}","import React, {Component} from 'react'\r\nimport classes from './Input.module.css'\r\n\r\n//валидация\r\nfunction isInvalid({valid, touched, shouldValidate}) {\r\n    //если не валидный, если нужна валидация, и если мы к нему прикасались\r\n    return !valid && shouldValidate && touched\r\n}\r\n\r\nconst Input = props => {\r\n\r\n    const inputType = props.type || 'text'\r\n    let cls = [classes.Input]\r\n    const htmlFor = `${inputType}-${Math.random()}`\r\n\r\n    if(isInvalid(props)) {\r\n        cls = [...cls, classes.invalid]\r\n    }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n            <label htmlFor={htmlFor}>{props.label}</label>\r\n            <input\r\n                type={props.type}\r\n                id={htmlFor}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n            />\r\n            {\r\n                isInvalid(props) ? <span>{props.errorMessage}</span> : null\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Input","import React, {Component} from 'react'\r\nimport classes from './Select.module.css'\r\n\r\nconst Select = props => {\r\n    const htmlFor = `${props.label}-${Math.random()}`\r\n\r\n    return (\r\n        <div className={classes.Select}>\r\n            <label htmlFor={htmlFor}>{props.label}</label>\r\n            <select\r\n                id={htmlFor}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n            >\r\n\r\n            { props.options.map( (option, index) => {\r\n                return <option\r\n                            value={option.value}\r\n                            key={option.value + index}\r\n                        >\r\n                        { option.text }\r\n                       </option>\r\n            })}\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Select","import React, {Component} from 'react'\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport classes from \"./QuizCreator.module.css\"\r\nimport {creacteControl, validateFramework, validateFormFramework} from \"../../components/Form/formFramework\";\r\nimport Input from \"../../components/UI/Input/Input\";\r\nimport Select from \"../../components/UI/Select/Select\";\r\n\r\nfunction createOptionControl(number) {\r\n    return creacteControl({\r\n        label: `Вариант ${number}` ,\r\n        errorMessage: 'Вариант не может быть пустым',\r\n        id: number\r\n    }, {required: true})\r\n}\r\n\r\nfunction createFormControls() {\r\n    return (\r\n        {\r\n            question: creacteControl({\r\n                label: 'Введите вопрос',\r\n                errorMessage: 'Вопрос не может быть пустым'\r\n            }, {required: true}),\r\n            option1: createOptionControl(1),\r\n            option2: createOptionControl(2),\r\n            option3: createOptionControl(3),\r\n            option4: createOptionControl(4)\r\n        }\r\n    )\r\n}\r\n\r\nclass QuizCreator extends Component {\r\n\r\n    state = {\r\n        quiz: [],\r\n        rightAnswerId: 1,\r\n        isFormValid: false,\r\n        formControls: createFormControls()\r\n    }\r\n\r\n\r\n    submitHandler = event => {\r\n        event.preventDefault()\r\n    }\r\n\r\n    addQuestionHandler = () => {\r\n        let quiz = [ ...this.state.quiz]\r\n        const index = quiz.length + 1\r\n\r\n        const {question, option1, option2, option3, option4} = this.state.formControls //деструкторизайия объекта\r\n\r\n        const questionItem = {\r\n            id: index,\r\n            question: question.value,\r\n            rightAnswerId: this.state.rightAnswerId,\r\n            answes: [\r\n                {text: option1.value, id: option1.id},\r\n                {text: option2.value, id: option2.id},\r\n                {text: option3.value, id: option3.id},\r\n                {text: option4.value, id: option4.id}\r\n            ]\r\n        }\r\n\r\n        quiz = [quiz, questionItem]\r\n        this.setState({\r\n            quiz,\r\n            rightAnswerId: 1,\r\n            isFormValid: false,\r\n            formControls: createFormControls()\r\n        })\r\n\r\n    }\r\n\r\n    createQuizHandler = () => {\r\n        console.log(this.state.quiz)\r\n        // TODO: SERVER\r\n    }\r\n\r\n    onChangeHandler = (value, controlName) => {\r\n\r\n        const formControls = { ...this.state.formControls }\r\n        const control = { ...formControls[controlName] }\r\n\r\n        control.touched = true\r\n        control.value = value\r\n        control.valid = validateFramework(control.value, control.validation)\r\n\r\n        formControls[controlName] = control\r\n\r\n        this.setState({\r\n            formControls,\r\n            isFormValid: validateFormFramework(formControls)\r\n        })\r\n\r\n    }\r\n\r\n    renderControls () {\r\n        return Object.keys(this.state.formControls).map( (controlName, index) => {\r\n            const control = this.state.formControls[controlName]\r\n\r\n\r\n            return (\r\n                <React.Fragment key={controlName + index}>\r\n                    <Input\r\n                        label={control.label}\r\n                        value={control.value}\r\n                        valid={control.valid}\r\n                        shouldValidate={!!control.validation}\r\n                        touched={control.touched}\r\n                        type={control.type}\r\n                        errorMessage={control.errorMessage}\r\n                        onChange={event => this.onChangeHandler(event.target.value, controlName)}\r\n                    />\r\n                    { index === 0 ? <hr /> : null }\r\n                </React.Fragment>\r\n            )\r\n        })\r\n    }\r\n\r\n    selectChangeHandler = event => {\r\n\r\n       this.setState({\r\n           rightAnswerId: +event.target.value\r\n       })\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const select = <Select\r\n            label='Выберите правильный ответ'\r\n            value={this.state.rightAnswerId}\r\n            onChange={this.selectChangeHandler}\r\n            options={[\r\n                {text:1, value:1},\r\n                {text:2, value:2},\r\n                {text:3, value:3},\r\n                {text:4, value:4}\r\n            ]}\r\n        />\r\n\r\n        return (\r\n            <div className={classes.QuizCreator}>\r\n                <div>\r\n                    <h1>Создание теста</h1>\r\n\r\n                    <form onSubmit={this.submitHandler}>\r\n\r\n                        { this.renderControls() }\r\n\r\n                        { select }\r\n\r\n\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={this.addQuestionHandler}\r\n                            disabled={!this.state.isFormValid}\r\n                        >\r\n                            Добавить вопрос\r\n                        </Button>\r\n\r\n                        <Button\r\n                            type=\"success\"\r\n                            onClick={this.createQuizHandler}\r\n                            disabled={this.state.quiz.length === 0}\r\n                        >\r\n                            Создать тест\r\n                        </Button>\r\n                    </form>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default QuizCreator","import React, {Component} from 'react'\r\nimport classes from './Auth.module.css'\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport Input from \"../../components/UI/Input/Input\";\r\nimport is from 'is_js'\r\n\r\nclass Auth extends Component {\r\n\r\n    state = {\r\n        isFormValid: false,\r\n        formControls: {\r\n            email: {\r\n                value: '',\r\n                type: 'email',\r\n                label: 'Email',\r\n                errorMessage: 'Введите корректный Email',\r\n                valid: false,\r\n                touched: false,\r\n                validation: {\r\n                    required: true,\r\n                    email: true\r\n                }\r\n            },\r\n            password: {\r\n                value: '',\r\n                type: 'password',\r\n                label: 'Пароль',\r\n                errorMessage: 'Пароль должен быть больше 5 символов',\r\n                valid: false,\r\n                touched: false,\r\n                validation: {\r\n                    required: true,\r\n                    minLenght: 6\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    loginHandler = () => {\r\n\r\n    }\r\n\r\n    registerHandler = () => {\r\n\r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault()\r\n    }\r\n\r\n    validateControl = (value, validation) => {\r\n        if(!validation) {\r\n            return true\r\n        }\r\n\r\n        let isValue = true\r\n\r\n        if(validation.required) {\r\n            isValue = value.trim() !== '' && isValue\r\n        }\r\n\r\n        if(validation.email) {\r\n            isValue = is.email(value)\r\n        }\r\n\r\n        if(validation.minLenght) {\r\n            isValue = value.length >= validation.minLenght && isValue\r\n        }\r\n\r\n        return isValue\r\n\r\n    }\r\n\r\n    onChangeHandler = (event, controlName) => {\r\n\r\n        const formControls = { ...this.state.formControls }\r\n        const control = { ...formControls[controlName] }\r\n\r\n        control.value = event.target.value\r\n        control.touched = true\r\n        control.valid = this.validateControl(control.value, control.validation)\r\n\r\n        formControls[controlName] = control\r\n\r\n        let isFormValid = true\r\n\r\n        //проходим по копии массива, уже новому\r\n        Object.keys(formControls).forEach( name => {\r\n            isFormValid = formControls[name].valid && isFormValid\r\n        })\r\n\r\n        this.setState({\r\n            formControls,\r\n            isFormValid\r\n        })\r\n    }\r\n\r\n    renderInputs () {\r\n        return Object.keys(this.state.formControls).map( (controlname, index) => {\r\n            const control = this.state.formControls[controlname]\r\n            return (\r\n                <Input\r\n                    key={index}\r\n                    type={control.type}\r\n                    value={control.value}\r\n                    valid={control.valid}\r\n                    touched={control.touched}\r\n                    label={control.label}\r\n                    shouldValidate={!!control.validation}\r\n                    errorMessage={control.errorMessage}\r\n                    onChange={event => this.onChangeHandler(event, controlname)}\r\n                />\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className={classes.Auth}>\r\n                <div>\r\n                    <h1>Авторизация</h1>\r\n\r\n                    <form onSubmit={this.submitHandler} className={classes.AuthForm}>\r\n\r\n                        { this.renderInputs() }\r\n\r\n                        <Button\r\n                            type={'success'}\r\n                            onClick={this.loginHandler}\r\n                            disabled={!this.state.isFormValid}\r\n                        >\r\n                            Войти\r\n                        </Button>\r\n                        <Button\r\n                            type={'primary'}\r\n                            onClick={this.registerHandler}\r\n                            disabled={!this.state.isFormValid}\r\n                        >\r\n                            Зарегестрирвоаться\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Auth","import './App.css';\nimport Layout from \"./hoc/Layout/Layout\";\nimport Quiz from \"./containers/Quiz/Quiz\";\nimport {Route, Switch} from \"react-router-dom\";\nimport QuizList from \"./containers/QuizList/QuizList\";\nimport QuizCreator from \"./containers/QuizCreator/QuizCreator\";\nimport Auth from \"./containers/Auth/Auth\";\n\n\nfunction App() {\n  return (\n    <Layout>\n        <Switch>\n            <Route path={'/auth'} component={Auth} />\n            <Route path={'/quiz-creator'} component={QuizCreator} />\n            <Route path={'/quiz/:id'} component={Quiz} />\n            <Route path={'/'} component={QuizList} />\n        </Switch>\n\n    </Layout>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <BrowserRouter>\n          <App />\n      </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}